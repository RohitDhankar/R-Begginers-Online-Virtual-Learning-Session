m_1
m_1 <- matrix(data=66:99,nrow=8,ncol=2)
m_1
m_1 <- matrix(data=66:99,nrow=17,ncol=2)
m_1
plot(m_1)
m_1 <- matrix(data=66:99,nrow=2,ncol=17)
m_1
plot(m_1)
?matrix()
row_names <- c("Row_Name_1","Row_Name_2")
col_names <- c("Col_Name_1","Col_Name_2")
m_1 <- matrix(data=66:69,nrow=2,ncol=2,byrow=FALSE,dimnames=list(col_names,row_names))
m_1
m_1 <- matrix(data=66:69,nrow=2,ncol=2)
m_1
m_1[1,1]
m_1[1,1]
#
m_1[1,2]
#
m_1[2,1]
#
m_1[2,2]
?read.csv()
library(readr)
R_1_Sheet1 <- read_csv("~/Desktop/R_Own/R_1 - Sheet1.csv")
View(R_1_Sheet1)
df_1 <- read.csv("~/Desktop/R_Own/R_1 - Sheet1.csv",header =TRUE , sep = "," )
df_1
df_2 <- read.csv("~/Desktop/R_Own/R_1 - Sheet1.csv")
df_2
df_2[1,3]
#
df_2[3,1]
#
df_2[4,3]
#
df_2[1,3]
#
df_2[3,1]
#
df_2[4,3]
# Date of Invoice
#
df_2["Date of Invoice"]
df_2[1,3]
#
df_2[3,1]
#
df_2[4,3]
# Date of Invoice
#
df_2["Date of Invoice"]
df_2[1,3]
#
df_2[3,1]
#
df_2[4,3]
# Date of Invoice
#
#df_2["Date of Invoice"]
#
df_2["Category"]
df_2[1,3]
#
df_2[3,1]
#
df_2[4,3]
# Date of Invoice
#
#df_2["Date of Invoice"]
#
df_2["Category"]
#
df_2["Date.of.Invoice"]
df_3 <- df_2[c("Category","Date.of.Invoice")]
df_3
df_4 <- df_3$Category
df_4
plot(df_1)
plot(df_3)
get(wd)
getwd()
getwd()
#
ls()
print(a1)
#
print(char_vector)
#
# Code Section -2
print(num_vector)
# Code Section -2
print(num_vector)
num_vector1 <- c(11,12,13,14,15)
#
num_vector3 <- c(num_vector,num_vector1)
print(num_vector3)
# Code Section -3
num_vector3 + 5
# Code Section -4
num_vector1 * num_vector3
# Code Section -5
length(num_vector1 * num_vector3)
# Code Section -6
log(num_vector3[2])
# Code Section -6
log(num_vector3[2]) # Log Base 2 of 22
#
log(22)
# Code Section -6
num_vector1 %*% num_vector3
# Code Section -6
num_vector1 %*% num_vector3 # Error in num_vector1 %*% num_vector3 : non-conformable arguments
# Code Section -6
#num_vector1 %*% num_vector3 # Error in num_vector1 %*% num_vector3 : non-conformable arguments
# Vectors are not of same Length above - below they are of same length
nv <- c(1,2,3,4,5)
nv1 <- c(6,7,8,9,10)
nv %*% nv1
# Code Section -1
print(a1)
#
print(char_vector)
#
# Code Section -8
ch_v <- c("11","12","13","14","15")
#
class(ch_v)
#
nm_v <- as.numeric(ch_v)
#
class(nm_v)
#
# Code Section -8
ch_v <- c("11","12","13","14","15")
#
class(ch_v)
ch_v + 2
# Code Section -8
ch_v <- c("11","12","13","14","15")
#
class(ch_v)
#ch_v + 2 # Error in ch_v + 2 : non-numeric argument to binary operator
# Cant do a Math operation on CHAR Vector - lets Convert into NUM Vector
#
nm_v <- as.numeric(ch_v)
#
class(nm_v)
nm_v + 2
#
# Code Section -8
ch_v <- c("11","12","13","14","15")
#
class(ch_v)
#ch_v + 2 # Error in ch_v + 2 : non-numeric argument to binary operator
# Cant do a Math operation on CHAR Vector - lets Convert into NUM Vector
#
nm_v <- as.numeric(ch_v)
#
class(nm_v)
nm_v + 2
#
summary(nm_v+2)
# Code Section -8
ch_v <- c("11","12","13","14","15")
#
class(ch_v)
#ch_v + 2 # Error in ch_v + 2 : non-numeric argument to binary operator
# Cant do a Math operation on CHAR Vector - lets Convert into NUM Vector
#
nm_v <- as.numeric(ch_v)
#
class(nm_v)
nm_v + 2
#
print("Summary of the Num Vector as below :- ")
summary(nm_v+2)
# Code Section -8
ch_v <- c("11","12","13","14","15")
#
class(ch_v)
#ch_v + 2 # Error in ch_v + 2 : non-numeric argument to binary operator
# Cant do a Math operation on CHAR Vector - lets Convert into NUM Vector
#
nm_v <- as.numeric(ch_v)
#
class(nm_v)
nm_v + 2
#
print("Summary of the Num Vector as below :- ")
summary(nm_v+2)
#
sum(nm_v+5)
#
sd(nm_v+5)
#
max(nm_v+5)
#
min(nm_v+5)
#
mean(nm_v+5)
#
median(nm_v+5)
#
# Code Section -8
ch_v <- c("11","12","13","14","15")
#
class(ch_v)
#ch_v + 2 # Error in ch_v + 2 : non-numeric argument to binary operator
# Cant do a Math operation on CHAR Vector - lets Convert into NUM Vector
#
nm_v <- as.numeric(ch_v)
#
class(nm_v)
nm_v + 2
#
print("Summary of the Num Vector as below :- ")
summary(nm_v+2)
#
summary(nm_v+5)
#
sum(nm_v+5)
#
sd(nm_v+5)
#
max(nm_v+5)
#
min(nm_v+5)
#
mean(nm_v+5)
#
median(nm_v+5)
#
# Code Section -9
plot(nm_v + 5)
getwd()
#
ls()
# Code Section -1
print(a1)
#
print(char_vector)
#
# Code Section -1
print(a1)
#
print(char_vector)
#
# Code Section -1
a1 <- "FINANCE"
b1 <- "MARKETING"
c1 <- "SALES"
d1 <- 3.1416
print(a1)
#
print(char_vector)
#
# Code Section -1
a1 <- "FINANCE"
b1 <- "MARKETING"
c1 <- "SALES"
d1 <- 3.1416
char_vector <- c("x","d","c","f")
print(a1)
#
print(char_vector)
#
# Code Section -8
ch_v <- c("11","12","13","14","15")
#
class(ch_v)
#ch_v + 2 # Error in ch_v + 2 : non-numeric argument to binary operator
# Cant do a Math operation on CHAR Vector - lets Convert into NUM Vector
#
nm_v <- as.numeric(ch_v)
#
class(nm_v)
nm_v + 2
#
print("Summary of the Num Vector as below :- ")
summary(nm_v+2)
#
summary(nm_v+5)
#
sum(nm_v+5)
#
sd(nm_v+5)
#
max(nm_v+5)
#
min(nm_v+5)
#
mean(nm_v+5)
#
median(nm_v+5)
#
print("The Quantile - ")
quantile(nm_v+5)
# Code Section -8
ch_v <- c("11","12","13","14","15")
#
class(ch_v)
#ch_v + 2 # Error in ch_v + 2 : non-numeric argument to binary operator
# Cant do a Math operation on CHAR Vector - lets Convert into NUM Vector
#
nm_v <- as.numeric(ch_v)
#
class(nm_v)
nm_v + 2
#
print("Summary of the Num Vector as below :- ")
summary(nm_v+2)
#
summary(nm_v+5)
#
sum(nm_v+5)
#
sd(nm_v+5)
#
max(nm_v+5)
#
min(nm_v+5)
#
mean(nm_v+5)
#
median(nm_v+5)
#
print("The Quantile - ")
quantile(nm_v+5)
#
quantile(nm_v+100)
# Code Section -8
ch_v <- c("11","12","13","14","15")
#
class(ch_v)
#ch_v + 2 # Error in ch_v + 2 : non-numeric argument to binary operator
# Cant do a Math operation on CHAR Vector - lets Convert into NUM Vector
#
nm_v <- as.numeric(ch_v)
#
class(nm_v)
nm_v + 2
#
print("Summary of the Num Vector as below :- ")
summary(nm_v+2)
#
summary(nm_v+5)
#
sum(nm_v+5)
#
sd(nm_v+5)
#
max(nm_v+5)
#
min(nm_v+5)
#
mean(nm_v+5)
#
median(nm_v+5)
#
print("The Quantile - ")
quantile(nm_v+5)
#
quantile(nm_v+100)
#
print("We can also specify the Quantile buckets or Percentiles as an argument to the Quantile function :- ")
#
nmv_q <- c(10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,100)
percent_1 <- quantile(nmv_q, c(.50,.84, .97, .99))
percent_1
# Code Section -8
ch_v <- c("11","12","13","14","15")
#
class(ch_v)
#ch_v + 2 # Error in ch_v + 2 : non-numeric argument to binary operator
# Cant do a Math operation on CHAR Vector - lets Convert into NUM Vector
#
nm_v <- as.numeric(ch_v)
#
class(nm_v)
nm_v + 2
#
print("Summary of the Num Vector as below :- ")
summary(nm_v+2)
#
summary(nm_v+5)
#
sum(nm_v+5)
#
sd(nm_v+5)
#
max(nm_v+5)
#
min(nm_v+5)
#
mean(nm_v+5)
#
median(nm_v+5)
#
print("The Quantile - ")
quantile(nm_v+5)
#
quantile(nm_v+100)
#
print("We can also specify the Quantile buckets or Percentiles as an argument to the Quantile function :- ")
#
nmv_q <- c(10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,100)
percent_1 <- quantile(nmv_q, c(.50,.75,.84, .97, .99))
percent_1
plot
# Seen above we have the MEDIAN quartile - 50% and the UPPER Quartile - 75% along with THREE more percentiles.
# Code Section -8
ch_v <- c("11","12","13","14","15")
#
class(ch_v)
#ch_v + 2 # Error in ch_v + 2 : non-numeric argument to binary operator
# Cant do a Math operation on CHAR Vector - lets Convert into NUM Vector
#
nm_v <- as.numeric(ch_v)
#
class(nm_v)
nm_v + 2
#
#Summary of the Num Vector as below :-
#
summary(nm_v+2)
#
summary(nm_v+5)
#
sum(nm_v+5)
#
sd(nm_v+5)
#
max(nm_v+5)
#
min(nm_v+5)
#
mean(nm_v+5)
#
median(nm_v+5)
#
#The Quantile -
#
quantile(nm_v+5)
#
quantile(nm_v+100)
#
#We can also specify the Quantile buckets or Percentiles as an argument to the Quantile function :-
#
nmv_q <- c(10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,100)
percent_1 <- quantile(nmv_q, c(.50,.75,.84, .97, .99))
percent_1
plot(percent_1)
# Seen above we have the MEDIAN quartile - 50% and the UPPER Quartile - 75% along with THREE more percentiles.
# Code Section -8
ch_v <- c("11","12","13","14","15")
#
class(ch_v)
#ch_v + 2 # Error in ch_v + 2 : non-numeric argument to binary operator
# Cant do a Math operation on CHAR Vector - lets Convert into NUM Vector
#
nm_v <- as.numeric(ch_v)
#
class(nm_v)
nm_v + 2
#
#Summary of the Num Vector as below :-
#
summary(nm_v+2)
#
summary(nm_v+5)
#
sum(nm_v+5)
#
sd(nm_v+5)
#
max(nm_v+5)
#
min(nm_v+5)
#
mean(nm_v+5)
#
median(nm_v+5)
#
#The Quantile -
#
quantile(nm_v+5)
#
quantile(nm_v+100)
#
#We can also specify the Quantile buckets or Percentiles as an argument to the Quantile function :-
#
nmv_q <- c(10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,100)
percent_1 <- quantile(nmv_q, c(.50,.75,.84, .97, .99))
percent_1
boxplot(percent_1,col = "red",horizontal = TRUE,main = "Box and Whisker Plot of Quantiles",xlab = "Quantile Values")
# Seen above we have the MEDIAN quartile - 50% and the UPPER Quartile - 75% along with THREE more percentiles.
# Code Section -9
nmv_q <- c(10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,100)
percent_1 <- quantile(nmv_q, c(.50,.75,.84, .97, .99))
percent_1
percent_2 <- quantile(nmv_q, c(.1, .3, .16, .40, .50))
percent_2
boxplot(percent_1,percent_2,col = "red",
names = c("perc_1","perc_2"),horizontal = TRUE,
main = "Box and Whisker Plot of Quantiles",
xlab = "Quantile Values")
# Kindly note the Quantiles are randomly chosen here
# this is not the best way to choose quantiles
# we shall come back for details later in this text
